


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: Avinash Bhaskaran, Aryan Jain
    3 00000000         ; Last modification date: 3/29/22
    4 00000000         ; Runs on TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   23 00000000         ; Output a 32-bit number in unsigned decimal format
   24 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   25 00000000         ; Output: none
   26 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   27 00000000         ; R0=0,    then output "0"
   28 00000000         ; R0=3,    then output "3"
   29 00000000         ; R0=89,   then output "89"
   30 00000000         ; R0=123,  then output "123"
   31 00000000         ; R0=9999, then output "9999"
   32 00000000         ; R0=4294967295, then output "4294967295"
   33 00000000 00000000 
                       count   EQU              0
   34 00000000 00000004 
                       num     EQU              4
   35 00000000         LCD_OutDec
   36 00000000 E92D 41F0       PUSH{R4-R8,      LR}
   37 00000004 B082            SUB              SP, #8      ; allocate space
   38 00000006 46EB            MOV              R11, SP     ; R11 - stack frame
                                                            
   39 00000008         
   40 00000008 F04F 0400       MOV              R4, #0      ; 
   41 0000000C F8CB 4000       STR              R4, [R11, #count] ; count = 0
   42 00000010 F8CB 0004       STR              R0, [R11, #num] ; num = R0 
   43 00000014 F04F 050A       MOV              R5, #10     ; R5 divisor for mo
                                                            d
   44 00000018         
   45 00000018 F8DB 4004 
                       oloop   LDR              R4, [R11, #num]
   46 0000001C         ; push num%10 on stack (ones place)
   47 0000001C FBB4 F6F5       UDIV             R6, R4, R5  ; R6 = num/10 (new 
                                                            num)
   48 00000020 FB06 F705       MUL              R7, R6, R5  ; 



ARM Macro Assembler    Page 2 


   49 00000024 EBA4 0707       SUB              R7, R4, R7  ; R7 = num - quotie
                                                            nt*10 (remainder)
   50 00000028 E92D 0180       PUSH{R7-R8}                  ; digit on top of s
                                                            tack
   51 0000002C         
   52 0000002C F8CB 6004       STR              R6, [R11, #num] ; num /= 10
   53 00000030 F8DB 7000       LDR              R7, [R11, #count] ; count++  
   54 00000034 F107 0701       ADD              R7, #1
   55 00000038 F8CB 7000       STR              R7, [R11, #count]
   56 0000003C         
   57 0000003C 2E00            CMP              R6, #0      ; stop when num = 0
                                                            , no digits left
   58 0000003E D000            BEQ              next
   59 00000040 E7EA            B                oloop
   60 00000042         
   61 00000042 F8DB 4000 
                       next    LDR              R4, [R11, #count] ; if count = 
                                                            0 finish
   62 00000046 2C00            CMP              R4, #0
   63 00000048 D00A            BEQ              done
   64 0000004A         
   65 0000004A E8BD 0101       POP              {R0,R8}     ; get new digit in 
                                                            R0
   66 0000004E F100 0030       ADD              R0, #0x30   ; offset for ASCII
   67 00000052 F7FF FFFE       BL               ST7735_OutChar ; write digit to
                                                             display
   68 00000056 F1A4 0401       SUB              R4, #1
   69 0000005A F8CB 4000       STR              R4, [R11, #count] ; count--
   70 0000005E E7F0            B                next
   71 00000060         
   72 00000060 B002    done    ADD              SP, #8      ; deallocate variab
                                                            les
   73 00000062 E8BD 81F0       POP{R4-R8,       PC}
   74 00000066         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   75 00000066         
   76 00000066         ; -----------------------LCD _OutFix--------------------
                       --
   77 00000066         ; Output characters to LCD display in fixed-point format
                       
   78 00000066         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   79 00000066         ; Inputs:  R0 is an unsigned 32-bit number
   80 00000066         ; Outputs: none
   81 00000066         ; E.g., R0=0,    then output "0.000"
   82 00000066         ;       R0=3,    then output "0.003"
   83 00000066         ;       R0=89,   then output "0.089"
   84 00000066         ;       R0=123,  then output "0.123"
   85 00000066         ;       R0=9999, then output "9.999"
   86 00000066         ;       R0>9999, then output "*.***"
   87 00000066         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   88 00000066         ; R1 NUMBER OF DIGITS DESIRED IN FORMAT
   89 00000066 0000270F 
                       max     EQU              9999        ; MAX NUMBER TO BE 
                                                            DISPLAYED (could be
                                                             10^4 - 1)
   90 00000066         ; R2 WHERE TO PLACE FIXED POINT IE # NON DECIMAL DIGITS
   91 00000066 0000002A 
                       star    EQU              42          ; '*'



ARM Macro Assembler    Page 3 


   92 00000066 0000002E 
                       dot     EQU              46          ; '.'
   93 00000066         LCD_OutFix
   94 00000066 E92D 47F0       PUSH{R4-R10,     LR}
   95 0000006A         
   96 0000006A B082            SUB              SP, #8      ; allocate space
   97 0000006C 46EB            MOV              R11, SP     ; R11 - stack frame
                                                             pointer
   98 0000006E         
   99 0000006E 4688            MOV              R8, R1
  100 00000070 4691            MOV              R9, R2
  101 00000072 4644            MOV              R4, R8      ; count = #digits
  102 00000074 F8CB 4000       STR              R4, [R11, #count]
  103 00000078 F8CB 0004       STR              R0, [R11, #num] ; num = R0
  104 0000007C F04F 050A       MOV              R5, #10     ; for mod
  105 00000080         
  106 00000080 F8DB 4004       LDR              R4, [R11, #num] ; go to over if
                                                             num > 9999
  107 00000084 F242 700F       MOV              R0, #max
  108 00000088 4284            CMP              R4, R0
  109 0000008A D825            BHI              over
  110 0000008C         ; This will place each ASCII digit on the stack (most si
                       gnificant on top)
  111 0000008C F8DB 4004 
                       floop   LDR              R4, [R11, #num] ; push num%10 o
                                                            n stack (ones place
                                                            )
  112 00000090 FBB4 F6F5       UDIV             R6, R4, R5  ; R6 = num/10 (new 
                                                            num)
  113 00000094 FB06 F705       MUL              R7, R6, R5
  114 00000098 EBA4 0707       SUB              R7, R4, R7  ; R7 = num - quotie
                                                            nt*10 (remainder)
  115 0000009C F107 0730       ADD              R7, #0x30   ; offset for ASCII
  116 000000A0 E92D 0180       PUSH{R7-R8}                  ; ASCII digit on to
                                                            p of stack
  117 000000A4         
  118 000000A4 F8CB 6004       STR              R6, [R11, #num] ; num /= 10
  119 000000A8 F8DB 7000       LDR              R7, [R11, #count]
  120 000000AC 3F01            SUBS             R7, #1
  121 000000AE F8CB 7000       STR              R7, [R11, #count] ; count-- 
  122 000000B2         
  123 000000B2 D1EB            BNE              floop       ; continue until al
                                                            l digits are on sta
                                                            ck
  124 000000B4         ; Writes values on stack to screen with added fixed poin
                       t where specified      
  125 000000B4 F8DB 4000 
                       out     LDR              R4, [R11, #count] ; if count = 
                                                            digits, finish
  126 000000B8 4544            CMP              R4, R8
  127 000000BA D018            BEQ              fin
  128 000000BC         
  129 000000BC E8BD 0101       POP              {R0,R8}     ; get new digit in 
                                                            R0
  130 000000C0 F7FF FFFE       BL               ST7735_OutChar ; write digit to
                                                             display
  131 000000C4         
  132 000000C4 3401            ADDS             R4, #1
  133 000000C6 F8CB 4000       STR              R4, [R11, #count] ; count++



ARM Macro Assembler    Page 4 


  134 000000CA         
  135 000000CA 454C            CMP              R4, R9      ; put fixed point a
                                                            fter #whole numbers
                                                            
  136 000000CC D1F2            BNE              out
  137 000000CE         
  138 000000CE F04F 002E       MOV              R0, #dot    ; output '.'
  139 000000D2 F7FF FFFE       BL               ST7735_OutChar
  140 000000D6 E7ED            B                out
  141 000000D8         ; Fills stack with #digit '*' so it can be output
  142 000000D8 F04F 002A 
                       over    MOV              R0, #star
  143 000000DC E92D 0101       PUSH{R0,         R8}
  144 000000E0         
  145 000000E0 F8DB 4000       LDR              R4, [R11, #count] ; count--
  146 000000E4 3C01            SUBS             R4, #1
  147 000000E6 F8CB 4000       STR              R4, [R11, #count]
  148 000000EA         
  149 000000EA D1F5            BNE              over
  150 000000EC E7E2            B                out
  151 000000EE         
  152 000000EE B002    fin     ADD              SP, #8      ; deallocate variab
                                                            les
  153 000000F0 E8BD 87F0       POP{R4-R10,      PC}
  154 000000F4         
  155 000000F4         
  156 000000F4         
  157 000000F4 4770            BX               LR
  158 000000F6         
  159 000000F6 00 00           ALIGN
  160 000000F8         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  161 000000F8         
  162 000000F8                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  163 000000F8                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_SpaceInvaders -IC:\Users\n2731\AppD
ata\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\n2731\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --
predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\print.lst P
rint.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 35 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000066

Symbol: LCD_OutFix
   Definitions
      At line 93 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
done 00000060

Symbol: done
   Definitions
      At line 72 in file Print.s
   Uses
      At line 63 in file Print.s
Comment: done used once
fin 000000EE

Symbol: fin
   Definitions
      At line 152 in file Print.s
   Uses
      At line 127 in file Print.s
Comment: fin used once
floop 0000008C

Symbol: floop
   Definitions
      At line 111 in file Print.s
   Uses
      At line 123 in file Print.s
Comment: floop used once
next 00000042

Symbol: next
   Definitions
      At line 61 in file Print.s
   Uses
      At line 58 in file Print.s
      At line 70 in file Print.s

oloop 00000018




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: oloop
   Definitions
      At line 45 in file Print.s
   Uses
      At line 59 in file Print.s
Comment: oloop used once
out 000000B4

Symbol: out
   Definitions
      At line 125 in file Print.s
   Uses
      At line 136 in file Print.s
      At line 140 in file Print.s
      At line 150 in file Print.s

over 000000D8

Symbol: over
   Definitions
      At line 142 in file Print.s
   Uses
      At line 109 in file Print.s
      At line 149 in file Print.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

count 00000000

Symbol: count
   Definitions
      At line 33 in file Print.s
   Uses
      At line 41 in file Print.s
      At line 53 in file Print.s
      At line 55 in file Print.s
      At line 61 in file Print.s
      At line 69 in file Print.s
      At line 102 in file Print.s
      At line 119 in file Print.s
      At line 121 in file Print.s
      At line 125 in file Print.s
      At line 133 in file Print.s
      At line 145 in file Print.s
      At line 147 in file Print.s

dot 0000002E

Symbol: dot
   Definitions
      At line 92 in file Print.s
   Uses
      At line 138 in file Print.s
Comment: dot used once
max 0000270F

Symbol: max
   Definitions
      At line 89 in file Print.s
   Uses
      At line 107 in file Print.s
Comment: max used once
num 00000004

Symbol: num
   Definitions
      At line 34 in file Print.s
   Uses
      At line 42 in file Print.s
      At line 45 in file Print.s
      At line 52 in file Print.s
      At line 103 in file Print.s
      At line 106 in file Print.s
      At line 111 in file Print.s
      At line 118 in file Print.s

star 0000002A

Symbol: star
   Definitions
      At line 91 in file Print.s
   Uses
      At line 142 in file Print.s
Comment: star used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 67 in file Print.s
      At line 130 in file Print.s
      At line 139 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
351 symbols in table
